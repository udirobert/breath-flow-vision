# =================================================================
# Imperfect Breath - Environment Configuration Template
# =================================================================
# Copy this file to .env and fill in your actual values
# NEVER commit .env files to version control!

# =================================================================
# FLOW BLOCKCHAIN CONFIGURATION
# =================================================================

# Flow Network (testnet, mainnet, emulator)
VITE_FLOW_NETWORK=testnet

# Flow Access Node API
VITE_FLOW_ACCESS_API=https://rest-testnet.onflow.org

# FCL Discovery Wallet
VITE_FLOW_DISCOVERY_WALLET=https://fcl-discovery.onflow.org/testnet/authn

# Deployed Contract Address (replace with your deployed address)
VITE_IMPERFECT_BREATH_ADDRESS=0xb8404e09b36b6623

# Flow Token Contract (testnet)
VITE_FLOW_TOKEN_ADDRESS=0x7e60df042a9c0868

# Fungible Token Standard (testnet)
VITE_FUNGIBLE_TOKEN_ADDRESS=0x9a0766d93b6608b7

# =================================================================
# SUPABASE CONFIGURATION
# =================================================================

# Supabase Project URL
VITE_SUPABASE_URL=https://your-project.supabase.co

# Supabase Anon Key (public key, safe for frontend)
VITE_SUPABASE_ANON_KEY=your_supabase_anon_key_here

# =================================================================
# AI SERVICES
# =================================================================

# Google Gemini API Key
VITE_GOOGLE_GEMINI_API_KEY=your_google_gemini_api_key_here

# OpenAI API Key (if using)
VITE_OPENAI_API_KEY=your_openai_api_key_here

# Anthropic API Key (if using)
VITE_ANTHROPIC_API_KEY=your_anthropic_api_key_here

# =================================================================
# LENS PROTOCOL (Social Layer)
# =================================================================

# Lens API Environment (testnet, polygon)
VITE_LENS_ENVIRONMENT=testnet

# Lens API Endpoint
VITE_LENS_API_URL=https://api-v2-mumbai.lens.dev

# =================================================================
# STORY PROTOCOL (IP Management)
# =================================================================

# Story Protocol Environment (testnet, mainnet)
VITE_STORY_ENVIRONMENT=testnet

# Story Protocol API
VITE_STORY_API_URL=https://api.story.foundation

# =================================================================
# APPLICATION CONFIGURATION
# =================================================================

# App Environment (development, staging, production)
NODE_ENV=development

# App Base URL
VITE_APP_URL=http://localhost:8080

# Enable debug mode
VITE_DEBUG=true

# Feature flags
VITE_ENABLE_CAMERA=true
VITE_ENABLE_AI_ANALYSIS=true
VITE_ENABLE_SOCIAL_FEATURES=true
VITE_ENABLE_IP_REGISTRATION=true

# =================================================================
# ANALYTICS & MONITORING
# =================================================================

# Sentry DSN (for error tracking)
VITE_SENTRY_DSN=your_sentry_dsn_here

# Google Analytics ID
VITE_GA_TRACKING_ID=your_google_analytics_id

# =================================================================
# DEVELOPMENT SETTINGS
# =================================================================

# Development server port
PORT=8080

# Enable source maps in production
VITE_GENERATE_SOURCEMAP=false

# =================================================================
# SECURITY NOTES
# =================================================================
#
# IMPORTANT SECURITY PRACTICES:
#
# 1. NEVER commit .env files to version control
# 2. Use VITE_ prefix for client-side variables only
# 3. Keep server-side secrets in backend environment
# 4. Rotate API keys regularly
# 5. Use different keys for different environments
# 6. Monitor API usage and set rate limits
#
# TESTNET vs MAINNET:
# - Use testnet for development and testing
# - Switch to mainnet only for production deployment
# - Never use mainnet private keys in development
#
# API KEY SECURITY:
# - Store sensitive keys in secure key management systems
# - Use environment-specific API keys
# - Implement proper CORS and rate limiting
# - Monitor for unusual API usage patterns
#
# =================================================================
